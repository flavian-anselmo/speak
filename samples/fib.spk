// Fibonacci sequence generator
mod "fmt"

// naive implementation
fib: n int64 -> int64
    where
        n == 0 = 0
        n == 1 = 1
        _ = (fib n - 1) + (fib n - 2)

// memoized implementation
fibMemo: n int64 -> int64
    memo is [0, 1]
    if memo[:n:] == ()
        memo[:n:] is (fibMemo n - 1) + (fibMemo n - 2)
    = memo[:n:]

main: () -> ()
    fmt::log "fib(20) is 6765:"
    fmt::println "Naive solution: {fib 20}"
    = fmt::println "Dynamic solution: {fibMemo 20}"