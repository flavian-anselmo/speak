// finding long collatz sequences

next: n number -> number
    if n % 2 == 0 ? = n / 2 ! = 3 * n + 1

sequence: start number -> []number
    if start < 2 ? start
    (sub: n number, acc []number -> []number
        if n == 1 ? acc
        sub (next n) (len acc))
    sub start [start:]

longestSequenceUnder: max number -> []number
    (sub: n, prevMax number, prevSeq []number -> []number
        if n == max ? prevSeq
        currSeq is sequence n
		currMax is len(currSeq)
		if currMax > prevMax ? sub (n + 1) currMax currSeq
		sub (n + 1) prevMax prevSeq)
    sub 1 0 []


// run a search for longest collatz sequence under max
max is 1_000
longest is longestSequenceUnder max
logf "Longest collatz seq under {} is {} items" max len
log longest // List has a string method