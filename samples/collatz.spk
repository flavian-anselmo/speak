// finding long collatz sequences
mod "fmt"

next: n int -> int
    if n % 2 == 0 ? = n / 2 ! = 3 * n + 1

sequence: start int -> []int
    where start < 2
        ? = start
        !   sub is _: n int, acc []int -> []int
                if n == 1 = acc
                = sub (next n) (len acc) }
            = sub start [start:]

longestSequenceUnder: max int -> []int
    sub is _: n, prevMax int, prevSeq []int -> []int
        where n == max
            ? = prevSeq
            !   currSeq is sequence n
		        currMax is len(currSeq)
		        if currMax > prevMax == true = sub n + 1 currMax currSeq
			    = sub n + 1 prevMax prevSeq
    = sub 1 0 []

main: () -> ()
    // run a search for longest collatz sequence under max
    max is 1_000
    longest is longestSequenceUnder max
    fmt::logf("Longest collatz seq under {max} is {len} items")
    = fmt::log(longest) // List has a string method